#!/usr/bin/python
# app/utils/user.py


"""
@author: Maxime Dréan.

Github: https://github.com/maximedrn
Telegram: https://t.me/maximedrn

Copyright © 2022 Maxime Dréan. All rights reserved.
Any distribution, modification or commercial use is strictly prohibited.
"""


# Python internal imports.
from .colors import GREEN, RED, YELLOW, RESET

# Python default imports.
from os.path import abspath, isfile
from json import loads, dumps
from requests import get
from glob import glob


def check_version(version) -> str:
    """Check for the new version of the script."""
    try:  # Try ot get the version of the bot.
        last_release = get('https://pastebin.com/raw/kRqGGUkc').text
        return f'\n{YELLOW}Version {last_release} is available!{RESET}' \
            if version != last_release else ''
    except Exception:  # SSL error.
        return f'\n{YELLOW}Unable to get the latest version.{RESET}'


def choose_wallet() -> str:
    """Ask the user for a wallet to connect to OpenSea."""
    return 'MetaMask'  # Remove this line to add more wallets.
    wallets = ['MetaMask', 'Coinbase Wallet']
    while True:
        print(f'{YELLOW}\nChoose a wallet:')
        [print(f'{wallets.index(wallet) + 1} - {wallet}'
               ) for wallet in wallets]  # Print wallets.
        answer = input('Wallet: ')  # Get the user answer.
        if not answer.isdigit():  # Check if answer is a number.
            print(f'{RED}Answer must be an integer.')
        elif int(answer) > len(wallets) or int(answer) <= 0:
            print(f'{RED}Wallet doesn\'t exist.')
        else:  # Return the name of wallet with a function format.
            return wallets[int(answer) - 1]


def read_file(value: str, question: str) -> str:
    """Read file or ask for data to write in text file."""
    if not isfile(abspath('assets/data.json')):  # If the file doesn't exist.
        open(abspath('assets/data.json'), 'a').write(dumps({}, indent=4))
    file = open(abspath('assets/data.json'), 'r', encoding='utf-8').read()
    content = loads(file) if file != '' else {}  # Read the file.
    if value in content and content[value] != '':
        return content[value]  # If the file is not empty.
    text = input(question)  # Ask the question.
    if text != '':  # If answer is not empty.
        if input(f'Do you want to save your {value.replace("_", " ")}'
                 ' in the assets/data.json file? (y/n) ').lower() == 'y':
            content[value] = text  # Append the new content.
            open(abspath('assets/data.json'), 'w', encoding='utf-8').write(
                dumps(content, indent=4))  # Write the text in file.
            print(f'{GREEN}Saved.{RESET}')
        else:
            print(f'{YELLOW}Not saved.{RESET}')
    return text


def perform_action() -> list:
    """Suggest multiple actions to the user."""
    while True:
        [print(string) for string in [
            f'{YELLOW}\nChoose an action to perform:{RESET}',
            '1 - Upload and sell NFTs (18 details/NFT).',
            '2 - Upload NFTs (12 details/NFT).', '3 - Sell '
            'NFTs (9 details/NFT including 3 autogenerated).',
            '4 - Delete NFTs (1 detail/NFT).']]
        number = input('Action number: ')
        if number.isdigit() and 0 < int(number) <= 4:
            return [[1, 2], [1], [2], [3]][int(number) - 1]
        print(f'{RED}Answer must be a strictly positive integer.{RESET}')


def recaptcha_solver() -> int:
    """Suggest multiple reCAPTCHA solver to the user."""
    while True:
        [print(string) for string in [
            f'{YELLOW}\nChoose a reCAPTCHA solver:{RESET}',
            '1 - Manual solver.', '2 - Automatic solver using Yolov5.',
            '3 - Automatic solver using 2Captcha.',
            '4 - No reCAPTCHA (OpenSea exploit - do not report!).']]
        number = input('Action number: ')
        if number.isdigit() and 0 < int(number) <= 4:
            return int(number), read_file(
                'two_captcha_key', 'What is your 2Captcha API key? '
            ) if number == '3' else ''
        print(f'{RED}Answer must be a strictly positive integer.{RESET}')


def choose_browser() -> int:
    """Ask the user for a browser."""
    browsers = [
        'ChromeDriver (Google Chrome).', 'GeckoDriver (Mozilla '
        'Firefox).', 'Google Chrome custom profile.']
    while True:
        print(f'{YELLOW}\nChoose a browser:')
        [print(f'{browsers.index(browser) + 1} - {browser}'
               ) for browser in browsers]  # Print browsers.
        answer = input('Browser: ')  # Get the user answer.
        if not answer.isdigit():  # Check if answer is a number.
            print(f'{RED}Answer must be an integer.')
        elif int(answer) > len(browsers) or int(answer) <= 0:
            print(f'{RED}Browser doesn\'t exist.')
        else:  # Return the index of browser.
            return int(answer) - 1


def data_file() -> str:
    """Read the data folder and extract JSON, CSV and XLSX files."""
    while True:
        file_number, files_list = 0, []
        print(f'{YELLOW}\nChoose your file:{RESET}\n0 - Browse a file on PC.')
        for files in [glob(f'data/{extension}')  # Files of the data folder.
                      for extension in ['*.json', '*.csv', '*.xlsx']]:
            for file in files:
                file_number += 1
                files_list.append(file)
                print(f'{file_number} - {file}')
        answer = input('File number: ')
        if not answer.isdigit():  # Check if answer is a number.
            print(f'{RED}Answer must be an integer.{RESET}')
        elif int(answer) == 0:  # Browse a file on PC.
            print(f'{YELLOW}Browsing on your computer...{RESET}')
            from tkinter import Tk  # Tkinter module: pip install tk
            from tkinter.filedialog import askopenfilename
            root = Tk()  # Initialize Tkinter.
            root.withdraw()  # Hide Tkinter tab.
            root.attributes('-topmost', True)  # Display the dialog.
            root.iconify()  # Hide the little window.
            return askopenfilename(filetypes=[(
                '', '.json .csv .xlsx')], parent=root)
        elif int(answer) <= len(files_list):
            return files_list[int(answer) - 1]  # Return path of file.
        else:  # In case user chose a file that doesn't exist.
            print(f'{RED}This file number does not exist.{RESET}')


def number(question: str) -> int:
    """Ask the user for the starting number."""
    while True:
        processes = input(question)
        if processes.isdigit() and 0 < int(processes):
            return int(processes) - 1
        print(f'{RED}Please enter a positive integer.{RESET}')
